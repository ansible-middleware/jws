{{ jws_systemd_script_shebang }}
# {{ ansible_managed }}

readonly MAIN_CLASS='org.apache.catalina.startup.Bootstrap'

{% if tomcat.home is defined %}
readonly CATALINA_BASE='{{ tomcat.home }}'
export CATALINA_BASE
{% endif %}

readonly COMMAND=${1:-'status'}

case "${COMMAND}" in
  status)
    if [ -e "{{ tomcat.service.pidfile }}" ]; then
      echo "Tomcat has no PIDfile, service is not running."
    else
      echo "Tomcat PID is $(cat {{ tomcat.service.pidfile }})."
    fi
    ;;
  start)
    options="-Dcatalina.base={{ tomcat.base }} \
    {% if tomcat.home is defined %} -Dcatalina.home=${CATALINA_BASE} {% endif %} \
    {% if tomcat.java is defined and tomcat.java.endorsed_dirs is defined %}-Djava.endorsed.dirs=${JAVA_ENDORSED_DIRS} {% endif %} \
    {% if tomcat.tmpdir is defined %}-Djava.io.tmpdir={{ tomcat.tmpdir }} {% endif %} \
    {% if tomcat.conf.properties is defined %}-Djava.util.logging.config.file={{ tomcat.conf.properties }} {% endif %}\
    -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager"

    flags="$JAVA_OPTS $CATALINA_OPTS"
    if [ "${SECURITY_MANAGER}" = "true" ] ; then
      options="${options} -Djava.security.manager -Djava.security.policy==${CATALINA_BASE}/conf/catalina.policy"
    fi
    {{ tomcat.home }}/bin/startup.sh
    readonly PID=$(ps -F | grep org.apache.catalina.startup.Bootstrap | sed -e '/grep/d' | sed -e 's/^[^ ]* *//' -e 's/  *.*$//')
    echo "Tomcat runs with PID: ${PID}"
    echo "${PID}" > "{{ tomcat.service.pidfile }}"
    ;;
  stop)
    {{ tomcat.home }}/bin/shutdown.sh
    rm -f "{{ tomcat.service.pidfile }}"
    ;;
esac
