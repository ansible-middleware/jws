---
- name: Check arguments
  ansible.builtin.assert:
    that:
      - tomcat_zipfile is defined
      - tomcat_zipfile != ""
    quiet: true
    fail_msg: "With {{ tomcat.install_method }} install method, 'tomcat_zipfile' needs to be defined (or at least jws_version)"

- name: Add zipfile to unarchive list
  ansible.builtin.set_fact:
    zipfiles:
      - { src: "{{ tomcat_zipfile }}", creates: "{{ tomcat.home }}/bin" }

- name: Add native zipfile to unarchive list
  ansible.builtin.set_fact:
    zipfiles: "{{ zipfiles + [{ 'src': tomcat_native_zipfile, 'creates': tomcat.home + '/lib/libtcnative-1.so' }] }}"
  when:
    - tomcat_native
    - tomcat_native_zipfile is defined
    - tomcat_native_zipfile | length > 0

- name: "Install {{ tomcat.service.hr_name }} and required binaries from local zipfiles (install method: {{ tomcat.install_method }})"
  ansible.builtin.unarchive:
    remote_src: yes
    src: "{{ jws_install_dir }}/{{ item.src }}"
    dest: "{{ jws_install_dir }}"
    owner: "{{ tomcat.user }}"
    group: "{{ tomcat.group }}"
    mode: 0750
    creates: "{{ item.creates }}"
  loop: "{{ zipfiles }}"
  notify: "Restart Tomcat service"
