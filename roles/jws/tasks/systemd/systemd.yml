---
- name: Check arguments
  ansible.builtin.assert:
    that:
      - jws.service is defined
      - jws.service.name is defined
      - jws.user is defined
      - jws.group is defined
      - jws_home is defined
    quiet: True

- name: "Ensure requirements for systemd"
  ansible.builtin.include_tasks: ../fastpackage.yml
  vars:
    packages_list:
      - systemd
      - procps-ng

- name: "Set required default for jws_service_conf if not provided."
  ansible.builtin.set_fact:
    jws_service_conf: "{{ jws_home }}/conf/{{ jws.service.name }}.conf"
  when:
    - not jws_service_conf is defined

- name: "Set required default for jws_service_conf if not provided."
  ansible.builtin.set_fact:
    jws_service_script: "{{ jws_home }}/bin/systemd-service.sh"
  when:
    - not jws_service_script is defined

- name: "Set required default for jws_service_conf if not provided."
  ansible.builtin.set_fact:
    jws_service_pidfile: "{{ jws_home }}/{{ jws_service_name }}.pidfile"
  when:
    - not jws_service_pidfile is defined

- name: "Escaladte privileges (if required)."
  become: "{{ jws_install_requires_become | default(true) }}"
  block:
    - name: "Ensure service script is deployed"
      ansible.builtin.template:
        src: templates/systemd/service.sh.j2
        dest: "{{ jws_service_script }}"
        owner: "{{ jws.user }}"
        group: "{{ jws.group }}"
        mode: 0755
        # TODO add selinux labels

    - name: "Ensure service configurations files is deployed: {{ jws_service_conf }}"
      ansible.builtin.include_role:
        name: common
        tasks_from: systemd.yml
      vars:
        server_restart_handler_name: "Restart Tomcat service"
        jws_rpm_java_home: "{{ rpm_java_home if rpm_java_home is defined else '/usr/lib/jvm/java' }}"
        server_name: "{{ jws.service.name }}"
        server_service_config_file_template: 'templates/systemd/tomcat.service.j2'
        server_systemd_path_to_unit: "{{ jws.service.systemd }}"
        service_systemd_env_file_template: 'templates/systemd/tomcat.conf.j2'
        service_systemd_env_file: "{{ jws_service_conf }}"
        server_systemd_group: "{{ jws.group }}"
        server_systtemd_user: "{{ jws.user }}"
