---
- name: Reload Systemd
  ansible.builtin.systemd:
    daemon_reload: yes
  when:
    - jws.service is defined
    - jws.service.enabled is defined
    - jws.service.enabled
  listen: "Systemd reload"

- name: "Ensure {{ jws.service.hr_name }} runs under systemd"
  ansible.builtin.include_tasks: tasks/systemd/service.yml
  when:
    - jws.service is defined
    - jws.service.enabled is defined
    - jws.service.enabled
  listen: "Ensure Tomcat runs under systemd"

- name: "Ensure systemd service for {{ jws.service.hr_name }} is stopped."
  ansible.builtin.include_tasks: tasks/systemd/stop.yml
  when:
    - jws.service is defined
    - jws.service.enabled is defined
    - jws.service.enabled
  listen: "Stop Tomcat service"

- name: "Restart {{ jws.service.hr_name }} service"
  ansible.builtin.service:
    name: "{{ jws.service.name }}"
    state: restarted
    enabled: true
  when:
    - jws.service is defined
    - jws.service.enabled is defined
    - jws.service.enabled
  listen: "Restart Tomcat service"

- name: "Install selinux policy"
  ansible.builtin.command: "semodule -i jws5-tomcat.pp"
  register: result
  changed_when:
    - result.rc == 0
  args:
    chdir: "{{ jws_home }}/selinux"
  listen: "Selinux policy created"

- name: "Apply selinux policy"
  ansible.builtin.command: "restorecon -r {{ jws.install_dir }}"
  register: result
  changed_when:
    - result.rc == 0
  listen: "Apply selinux policy"

- name: Notify new patch is available
  ansible.builtin.debug:
    msg: "WARNING: Your configuration defines patch version: {{ jws_patch_version }} new patch is available: {{ jws_latest_version }}"
  listen: "new patch available"
